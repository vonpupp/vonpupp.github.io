{"author":{"name":"Albert","type":"card","url":"https://albertdelafuente.com"},"content":{"html":"\n\n\u003cdl\u003e\n\u003cdt\u003eRelated notes\u003c/dt\u003e\n\u003cdd\u003e\u003ca href=\"/exobrain/20220703004228-how_to_list_all_projects_in_gitlab/\"\u003eHow to list all projects in Gitlab\u003c/a\u003e, \u003ca href=\"/exobrain/20220703011205-how_to_list_all_projects_in_github/\"\u003eHow to list all projects in Github\u003c/a\u003e\u003c/dd\u003e\n\u003c/dl\u003e\n\n\u003ch2 id=\"install-the-package\"\u003eInstall the package\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003epip install --user tsrc\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"create-the-manifest-repository\"\u003eCreate the manifest repository\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eCreate a new repository named \u003ccode\u003emanifest\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eCreate a file \u003ccode\u003emanifest.yml\u003c/code\u003e with the following content:\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c!--listend--\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003erepos\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e-\u003cspan class=\"w\"\u003e \u003c/span\u003edest\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eorg\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003ebranch\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003emaster\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003eremotes\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e-\u003cspan class=\"w\"\u003e \u003c/span\u003ename\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eorigin\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003eurl\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003egit@github.com\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt;.git\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e-\u003cspan class=\"w\"\u003e \u003c/span\u003ename\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ehttps\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003eurl\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003ehttps\u003cspan class=\"p\"\u003e:\u003c/span\u003e//\u0026lt;user\u0026gt;\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u0026lt;token\u0026gt;@github.com/\u0026lt;organization\u0026gt;/\u0026lt;repo\u0026gt;.git\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e-\u003cspan class=\"w\"\u003e \u003c/span\u003ename\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003enas\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e      \u003c/span\u003eurl\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003essh\u003cspan class=\"p\"\u003e:\u003c/span\u003e//\u0026lt;user\u0026gt;@\u0026lt;server\u0026gt;\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u0026lt;port\u0026gt;/\u0026lt;path\u0026gt;/\u0026lt;repo\u0026gt;.git\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003eThis will create the setup for a repository that always stays in sync across all\nthe remotes. The cool thing about this is that it will automatically keep in\nsync the git remotes with this definition. I have been looking out for this for\na long time, this is really cool.\u003c/p\u003e\n\n\u003ch2 id=\"init-the-repository-and-sync\"\u003eInit the repository and sync\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e ~\ntsrc init git@github.com:\u0026lt;user\u0026gt;/manifest.git\ntsrc --verbose sync\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"sync-via-https\"\u003eSync via https\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003etsrc --verbose sync -r https\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"migrating-from-master-to-main-branch\"\u003eMigrating from master to main branch\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003eMake sure the \u003ccode\u003emaster\u003c/code\u003e branch is clean and there is nothing to commit nor staged\u003c/li\u003e\n\u003cli\u003eChange to the main branch with \u003ccode\u003egit checkout --track origin/main\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eRemove the readme if needed \u003ccode\u003erm README.md\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eMerge with \u003ccode\u003egit merge --allow-unrelated-histories master\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd the changes \u003ccode\u003egit add .\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eCommit \u003ccode\u003egit commit -m 'Merge with master branch'\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ePush \u003ccode\u003egit push\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eDelete the master branch locally \u003ccode\u003egit branch -d master\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eDelete the master branch remotely \u003ccode\u003egit push origin --delete master\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eChange \u003ccode\u003ebranch: master\u003c/code\u003e to \u003ccode\u003ebranch: main\u003c/code\u003e in the \u003ccode\u003emanifest.yml\u003c/code\u003e file\u003c/li\u003e\n\u003cli\u003eCommit and push the \u003ccode\u003emanifest.yml\u003c/code\u003e file\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eSometimes it is needed to \u003ccode\u003egit branch --set-upstream-to=origin/master master\u003c/code\u003e\u003c/p\u003e\n\n\u003ch2 id=\"sync-a-group\"\u003eSync a group\u003c/h2\u003e\n\n\u003cp\u003eThis command works and will sync the org-media content (it will create the repo\nif it doesn\u0026rsquo;t exists). However I am not sure I understand why the \u003ccode\u003e-r org\u003c/code\u003e flag\nis needed. The \u003ccode\u003estatus\u003c/code\u003e command instead of \u003ccode\u003esync\u003c/code\u003e is useful for debugging.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003etsrc --verbose sync -r nas --group org-group -r org\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003ch2 id=\"resources\"\u003eResources\u003c/h2\u003e\n\n\u003ch3 id=\"tsrc-documentation\"\u003e\u003ca href=\"https://your-tools.github.io/tsrc/#tutorial\"\u003etsrc documentation\u003c/a\u003e\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eSource: \u003ca href=\"https://your-tools.github.io/tsrc/#tutorial\"\u003ehttps://your-tools.github.io/tsrc/#tutorial\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eTitle: tsrc documentation\u003c/li\u003e\n\u003cli\u003eCaptured on: \u003cspan class=\"timestamp-wrapper\"\u003e\u003cspan class=\"timestamp\"\u003e[2022-07-02 Sat]\u003c/span\u003e\u003c/span\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","text":"  Related notes How to list all projects in Gitlab, How to list all projects in Github  Install the package pip install --user tsrc Create the manifest repository  Create a new repository named manifest Create a file manifest.yml with the following content:   repos:-dest:orgbranch:masterremotes:-name:originurl:git@github.com:\u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt;.git-name:httpsurl:https://\u0026lt;user\u0026gt;:\u0026lt;token\u0026gt;@github.com/\u0026lt;organization\u0026gt;/\u0026lt;repo\u0026gt;.git-name:nasurl:ssh://\u0026lt;user\u0026gt;@\u0026lt;server\u0026gt;:\u0026lt;port\u0026gt;/\u0026lt;path\u0026gt;/\u0026lt;repo\u0026gt;.git This will create the setup for a repository that always stays in sync across all the remotes. The cool thing about this is that it will automatically keep in sync the git remotes with this definition. I have been looking out for this for a long time, this is really cool.\nInit the repository and sync cd ~ tsrc init git@github.com:\u0026lt;user\u0026gt;/manifest.git tsrc --verbose sync Sync via https tsrc --verbose sync -r https Migrating from master to main branch  Make sure the master branch is clean and there is nothing to commit nor staged Change to the main branch with git checkout --track origin/main Remove the readme if needed rm README.md Merge with git merge --allow-unrelated-histories master Add the changes git add . Commit git commit -m 'Merge with master branch' Push git push Delete the master branch locally git branch -d master Delete the master branch remotely git push origin --delete master Change branch: master to branch: main in the manifest.yml file Commit and push the manifest.yml file  Sometimes it is needed to git branch --set-upstream-to=origin/master master\nSync a group This command works and will sync the org-media content (it will create the repo if it doesn\u0026rsquo;t exists). However I am not sure I understand why the -r org flag is needed. The status command instead of sync is useful for debugging.\ntsrc --verbose sync -r nas --group org-group -r org Resources tsrc documentation  Source: https://your-tools.github.io/tsrc/#tutorial Title: tsrc documentation Captured on: [2022-07-02 Sat]  "},"name":"How to use tsrc to manage multiple git repositories and remotes","published":"2022-07-03T01:52:57-03:00","summary":"Related notes How to list all projects in Gitlab, How to list all projects in Github  Install the package pip install --user tsrc Create the manifest repository  Create a new repository named manifest Create a file manifest.yml with the following content:   repos:-dest:orgbranch:masterremotes:-name:originurl:git@github.com:\u0026lt;user\u0026gt;/\u0026lt;repo\u0026gt;.git-name:httpsurl:https://\u0026lt;user\u0026gt;:\u0026lt;token\u0026gt;@github.com/\u0026lt;organization\u0026gt;/\u0026lt;repo\u0026gt;.git-name:nasurl:ssh://\u0026lt;user\u0026gt;@\u0026lt;server\u0026gt;:\u0026lt;port\u0026gt;/\u0026lt;path\u0026gt;/\u0026lt;repo\u0026gt;.git This will create the setup for a repository that always stays in sync across all the remotes. The cool thing about this is that it will automatically keep in sync the git remotes with this definition.","type":"entry","url":"https://albertdelafuente.com/exobrain/20220702144603-how_to_use_tsrc/"}